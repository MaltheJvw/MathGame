@page "/scoreboard/{ProfileId:int}"
@using MathGame.Model
@using MathGame.Services
@inject ScoreboardService ScoreboardService
@inject ProfileStateService ProfileStateService
@inject NavigationManager NavigationManager

<h1>Global Scoreboard</h1>

@if (profiles == null)
{
    <p>Loading...</p>
}
else if (!profiles.Any())
{
    <p>No profiles available.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Profile Name</th>
                <th>Total Score</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var profile in profiles)
            {
                <tr>
                    <td>@profile.User?.Username</td>
                    <td>@profile.Scoreboards?.Sum(sb => sb.Score) ?? 0</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public int ProfileId { get; set; }

    private List<Profile> profiles;

    // Fetch all profiles with their scoreboards and sort them by total score
    protected override async Task OnInitializedAsync()
    {
        // Load all profiles
        profiles = await ScoreboardService.LoadAllProfilesWithScores();

        // Sort profiles by their total score in descending order
        profiles = profiles.OrderByDescending(p => p.Scoreboards?.Sum(sb => sb.Score) ?? 0).ToList();
    }
}

